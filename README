Nginx push module - redirect a request body to other waiting requests

If you want a long-polling server but don't want to wait on idle connections
via upstream proxies, use this module to have nginx accept client connections.
Send responses to clients by sending an HTTP request to a different location.

----------- Example Config ------------
http {
	#maximum amount of memory the push module is allowed to use 
	#for buffering and stuff
	push_buffer_size	12M; #default is 3M

	#sender
	server {
	listen       localhost:8089; 
		location / {
			default_type  text/plain;
			set $push_id $arg_id; #/?id=239aff3 or somesuch
			push_sender;
			push_message_timeout 2h; #buffered messages expire after 2 hours
		}
	}

	#receiver
	server {
		listen       8088;
		location / {
			default_type  text/plain;
			set $push_id $arg_id; #/?id=239aff3 or somesuch
			push_listener;
		}
	}
}

-- Configuration options & variables --
Options:
push_sender (no arguments,  server or location config)
defines a server or location as the push_server, described below.

push_listener (no arguments, in server or location config)
defines a push_client server or location

push_queue_messages (on|off (default to on), anywhere)
Whether or not message queuing is enabled. If set to off, 
messages will be delivered only if a push_client connection is already 
present for the id.

push_message_timeout (time (default to 1h), anywhere)
How long a message may be queued before it is considered expired.
For messages that never expire, set this to 0.

push_buffer_size (size (default to 3M), main config)
The size of the memory chunk this module will use for all message queuing and
buffering.

Variables:
$push_id
The id associated with a push_server or push_client.
set $push_id $arg_id would set $push_id to the url parameter "id"

------------ Operation ----------------	
Assuming the example config given above:
Clients will connect to http://example.com:8088/?id=... and have the 
response delayed until a message is POSTed to http://localhost:8089/?id=...
Messages can be sent to clients that have not yet connected, i.e. they are queued.

Upon sending a request to a push_sender location, the server will respond with 
a 201 Created if the message has been sent. If it must be queued up (i.e. the 
push_listener with this id is presently connected), a 202 Accepted will be sent.
 
If you indend to have the push_sender be a server-side application, 
it's a damn good idea to make sure the push_server location is not visible
publically, as it is intended for use only by your application.

--------- "Protocol" spec -------------
see http://wiki.github.com/slact/nginx_http_push_module/queuing-long-poll-relay-protocol
-----------------------------

TODO: 
	- Add a push_accomodate_strangers setting (presently defaulting to on). When set to off, requests
	  with a previously-unseen $push_id will be rejected. 
	- When POSTing to push_server, if Content-Type is "message/http", the response sent to $push_id 
	  should be created from the body of the request.

