#!/bin/sh #good enough highlighting
#user  nobody;
worker_processes 20;
working_directory /tmp;

worker_rlimit_core  1024M;
worker_rlimit_nofile 100000;
#debug_points stop;

#error_log  /dev/stderr debug;
error_log  /dev/stderr  notice;
#error_log   err.log  notice;

pid        /tmp/nchan-test-nginx.pid;
daemon	    off;

events {
  worker_connections  10000;
  accept_mutex on;
}

http {
  access_log /dev/stdout;
#  access_log /dev/stdout;
  default_type  application/octet-stream;
  client_body_temp_path /tmp/ 1 2;
  sendfile        on;
  keepalive_timeout  65;
  nchan_authorized_channels_only off;
  nchan_max_reserved_memory 32M;
  nchan_redis_url "redis://127.0.0.1:8537";
  #cachetag

  server {
    listen       8082;
#    root ./;

    #nchan_use_redis on;
    
    location ~ /pubsub/(\w+)$ {
      nchan_channel_id $1;
      nchan_pubsub;
      nchan_min_message_buffer_length 5;
      nchan_max_message_buffer_length 200;
      nchan_message_timeout 60s;
      nchan_channel_group test;
    }
    
    location ~ /pub/(\w+)$ {
      nchan_channel_id $1;
      nchan_publisher;
      nchan_min_message_buffer_length 5;
      nchan_max_message_buffer_length 200000;
      nchan_message_timeout 60s;
      nchan_channel_group test;
    }
    
    location ~ /pub/multi/(\w+)$ {
      nchan_channel_id $1 banana;
      nchan_publisher;
      nchan_min_message_buffer_length 5;
      nchan_max_message_buffer_length 200000;
      nchan_message_timeout 60s;
      nchan_channel_group test;
    }

    location ~/pub/nobuffer/(\w+)$ {
      nchan_channel_id $1;
      nchan_publisher;
      nchan_store_messages off;
      nchan_message_timeout 60s;
      nchan_channel_group test;
    }

    location ~ /pub/2_sec_message_timeout/(\w+)$ {
      nchan_channel_id $1;
      nchan_publisher;
      nchan_min_message_buffer_length 5;
      nchan_max_message_buffer_length 200;
      nchan_message_timeout 2s;
      nchan_channel_group test;
    }

    location ~ /sub/broadcast/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber;
      nchan_channel_group test;
      nchan_subscriber_concurrency broadcast;
    }
    
    location ~ /sub/multi/(\w+)$ {
      nchan_channel_id $1 banana;
      nchan_subscriber;
      nchan_channel_group test;
    }
    
    location ~ /sub/first/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber;
      nchan_channel_group test;
      nchan_subscriber_concurrency first;
    }
    location ~ /sub/last/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber;
      nchan_channel_group test;
      nchan_subscriber_concurrency last;
    }
    location ~ /sub/intervalpoll/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber interval-poll;
      nchan_channel_group test;
      nchan_subscriber_concurrency broadcast;
    }

    location ~ /sub/gzip/(\w+)$ {
      nchan_channel_id $1;
      add_header Content-Type text/plain;
      gzip on;
      gzip_min_length 10;
      gzip_proxied any;
      gzip_types *;
      nchan_subscriber;
      nchan_channel_group test;
      nchan_subscriber_concurrency broadcast;
    }

    #quick subscriber timeout
    location ~ /sub/timeout/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber;
      nchan_channel_group test;
      nchan_subscriber_concurrency broadcast;
      nchan_subscriber_timeout 2s;
    }

    #authorized channels only -- publishers must create the channel before subscribing
    location ~ /sub/authorized/(\w+)$ {
      nchan_channel_id $1;
      nchan_authorized_channels_only on;
      nchan_subscriber;
      nchan_channel_group test;
    }

    location ~ /sub/noid/(\w+)$ {
      nchan_subscriber;
      nchan_channel_group test;
    }
    
    location ~ /rewrite/(.*)$ {
      rewrite  ^/(.*)$  $1;
    }
    
    location ~ /sub/websocket_only/(\w+)$ {
      nchan_channel_id $1;
      nchan_subscriber websocket;
      nchan_channel_group test;
    }

  }
}
